// Generated by CoffeeScript 1.4.0
(function() {
  var loader;

  loader = new Shotgun.Loader({
    urls: {
      libs: ['http://backbonejs.org/backbone-min.js'],
      apps: ['/js/testapp.js'],
      data: ['http://google.com/']
    },
    debug: true,
    ready: function(data) {
      return Testapp(data);
    }
  });

  loader.start();

}).call(this);
// Generated by CoffeeScript 1.4.0
(function() {
  var Testapp;

  Testapp = function(data) {
    return console.log(data);
  };

}).call(this);
// Generated by CoffeeScript 1.4.0
(function() {
  var Loader, Shotgun;

  console.log('here');

  if (!Shotgun) {
    Shotgun = {};
  }

  Shotgun.Loader = Loader = (function() {

    Loader.prototype.template = '<div id="shotgun-loader-container">\n    <div id="shotgun-loader-label>\n    \n    </div>\n    <div class="progress progress-striped active">\n        <div class="bar" style="width: 50%;"></div>\n    </div>\n</div>';

    Loader.prototype.dependencies = ['http://underscorejs.org/underscore-min.js'];

    function Loader(options) {
      this.options = options || {};
      this.level = 0;
    }

    Loader.prototype.log = function(from, msg) {
      if (from && msg) {
        if (this.options.debug) {
          return console.log("Shotgun.Loader " + from + ": " + msg);
        }
      } else if (from) {
        if (this.options.debug) {
          return console.log(from);
        }
      }
    };

    Loader.prototype.start = function() {
      var _this = this;
      this.log('start', 'options');
      this.log(this.options);
      return this.load('script', this.dependencies, 20, 'Loading dependencies...', function() {
        _this.render();
        _this.progress(20, 'Loading libraries...');
        return _this.load('script', _this.options.urls.libs, 20, 'Loading libraries...', function() {
          return _this.load('script', _this.options.urls.apps, 20, 'Loading applications...', function() {
            return _this.load('data', _this.options.urls.data, 60, 'Loading data...', function() {
              _this.progress(100, 'ready');
              return _this.options.ready(_this.data);
            });
          });
        });
      });
    };

    Loader.prototype.render = function() {
      this.$el = $('<div id="shotgun-loader" />').appendTo('body');
      this.$template = _.template(this.template());
      this.$el.html(this.$template());
      this.$label = $(this.el).find('.shotgun-loader-label');
      this.$bar = $(this.el).find('.shotgun-loader-bar');
      console.log(this.$label.html());
      return this.rendered = true;
    };

    Loader.prototype.progress = function(level, message) {
      this.level += level;
      if (!this.rendered) {

      }
    };

    Loader.prototype.load = function(type, urls, maxLevel, msg, done) {
      var functions, i, url, _i, _len,
        _this = this;
      if (urls == null) {
        urls = [];
      }
      functions = [];
      for (i = _i = 0, _len = urls.length; _i < _len; i = ++_i) {
        url = urls[i];
        functions.push(function(i) {
          if (i == null) {
            i = 0;
          }
          _this.progress(maxLevel / urls.length, urls[i]);
          if (type === 'data') {
            type = '';
          }
          return $.ajax({
            url: urls[i],
            dataType: type,
            complete: function() {
              if (functions[i + 1]) {
                return functions[i + 1](i + 1);
              } else {
                return done();
              }
            }
          });
        });
      }
      if (functions[0]) {
        return functions[0]();
      } else {
        this.progress(maxLevel, 'done');
        return done();
      }
    };

    return Loader;

  })();

}).call(this);
